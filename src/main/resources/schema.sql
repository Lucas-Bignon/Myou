-- MySQL Script generated by MySQL Workbench
-- Mon Mar 22 13:23:30 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema myou
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema myou
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `myou` DEFAULT CHARACTER SET utf8 ;
USE `myou` ;

-- -----------------------------------------------------
-- Table `myou`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`roles` (
                                              `id` INT NOT NULL,
                                              `key` VARCHAR(3) NULL,
    `name` VARCHAR(45) NOT NULL,
    `priority` INT(2) NULL,
    `creation_date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
    `modif_date` DATETIME NULL,
    PRIMARY KEY (`id`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myou`.`permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`permission` (
                                                   `id` INT NOT NULL,
                                                   `etat` VARCHAR(11) NOT NULL,
    PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `myou`.`role_has_permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`role_has_permission` (
                                                            `roles_id` INT NOT NULL,
                                                            `permission_id` INT NOT NULL,
                                                            PRIMARY KEY (`roles_id`, `permission_id`),
    INDEX `fk_role_has_permission_permission1_idx` (`permission_id` ),
    INDEX `fk_role_has_permission_roles1_idx` (`roles_id` ) ,
    CONSTRAINT `fk_role_has_permission_permission1`
    FOREIGN KEY (`permission_id`)
    REFERENCES `myou`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_role_has_permission_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `myou`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `myou`.`modules`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`modules` (
                                                `id` INT NOT NULL,
                                                `module_name` VARCHAR(11) NULL,
    `module_key` VARCHAR(3) NOT NULL,
    PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `myou`.`permission_has_modules`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`permission_has_modules` (
                                                               `permission_id` INT NOT NULL,
                                                               `modules_id` INT NOT NULL,
                                                               PRIMARY KEY (`permission_id`, `modules_id`),
    INDEX `fk_permission_has_modules_modules1_idx` (`modules_id`) ,
    INDEX `fk_permission_has_modules_permission1_idx` (`permission_id` ),
    CONSTRAINT `fk_permission_has_modules_permission1`
    FOREIGN KEY (`permission_id`)
    REFERENCES `myou`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_permission_has_modules_modules1`
    FOREIGN KEY (`modules_id`)
    REFERENCES `myou`.`modules` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `myou`.`actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`actions` (
                                                `id` INT NOT NULL,
                                                `action_name` VARCHAR(11) NULL,
    `action_key` VARCHAR(3) NOT NULL,
    `creation_date` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `modif_date` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `actionscol` VARCHAR(45) NULL,
    PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `myou`.`permission_has_actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`permission_has_actions` (
                                                               `permission_id` INT NOT NULL,
                                                               `actions_id` INT NOT NULL,
                                                               PRIMARY KEY (`permission_id`, `actions_id`),
    INDEX `fk_permission_has_actions_actions1_idx` (`actions_id` ) ,
    INDEX `fk_permission_has_actions_permission1_idx` (`permission_id` ) ,
    CONSTRAINT `fk_permission_has_actions_permission1`
    FOREIGN KEY (`permission_id`)
    REFERENCES `myou`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_permission_has_actions_actions1`
    FOREIGN KEY (`actions_id`)
    REFERENCES `myou`.`actions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `myou`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`user` (
                                             `id` INT NOT NULL,
                                             `name` VARCHAR(45) NULL,
    `password` VARCHAR(30) NOT NULL,
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `remember_token` VARCHAR(100) NULL,
    PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `myou`.`user_has_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`user_has_roles` (
                                                       `user_id` INT NOT NULL,
                                                       `roles_id` INT NOT NULL,
                                                       PRIMARY KEY (`user_id`, `roles_id`),
    INDEX `fk_user_has_roles_roles1_idx` (`roles_id` ASC),
    INDEX `fk_user_has_roles_user1_idx` (`user_id` ASC),
    CONSTRAINT `fk_user_has_roles_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `myou`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_user_has_roles_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `myou`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `myou`.`color`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`color` (
                                              `id` INT NOT NULL,
                                              `name` VARCHAR(10) NULL,
    `action_key` VARCHAR(255) NULL,
    `module_key` VARCHAR(32) NOT NULL,
    PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `myou`.`notepad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`notepad` (
                                                `id` INT NOT NULL,
                                                `title` VARCHAR(32) NULL,
    `description` VARCHAR(255) NOT NULL,
    `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `token` INT(5) NULL,
    `color_id` INT NOT NULL,
    PRIMARY KEY (`id`, `color_id`),
    INDEX `fk_notepad_color1_idx` (`color_id` ASC),
    CONSTRAINT `fk_notepad_color1`
    FOREIGN KEY (`color_id`)
    REFERENCES `myou`.`color` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `myou`.`user_has_notepad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myou`.`user_has_notepad` (
                                                         `user_id` INT NOT NULL,
                                                         `notepad_id` INT NOT NULL,
                                                         PRIMARY KEY (`user_id`, `notepad_id`),
    INDEX `fk_user_has_notepad_notepad1_idx` (`notepad_id` ASC),
    INDEX `fk_user_has_notepad_user1_idx` (`user_id` ASC),
    CONSTRAINT `fk_user_has_notepad_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `myou`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_user_has_notepad_notepad1`
    FOREIGN KEY (`notepad_id`)
    REFERENCES `myou`.`notepad` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;